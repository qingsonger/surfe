name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
      fail-fast: false

    steps:
    # Checkout the repository with submodules
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libeigen3-dev \
          python3-dev \
          python3-pip \
          git

    # Install Python dependencies
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pybind11 setuptools

    # Configure CMake
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. \
          -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 \
          -DPYTHON_EXECUTABLE=$(which python3)

    # Build the project
    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    # Install the Python module
    - name: Install Python module
      run: |
        python3 setup.py install

    # Run tests (if applicable)
    - name: Run tests
      run: |
        cd test
        # Assuming test/main.cpp is compiled into an executable named 'test'
        ../build/test/test

    # Verify Python module import
    - name: Verify Python module
      run: |
        python3 -c "import surfepy; print('Successfully imported surfepy')"
